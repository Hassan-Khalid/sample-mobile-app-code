// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 54;
	objects = {

/* Begin PBXBuildFile section */
		00E356F31AD99517003FC87E /* makulaTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* makulaTests.m */; };
		048806862B8629B500729DAD /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
		048806872B8629B500729DAD /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		0488068C2B8629B500729DAD /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		0488068D2B8629B500729DAD /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		048806992B8629CF00729DAD /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
		0488069A2B8629CF00729DAD /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		0488069F2B8629CF00729DAD /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		048806A02B8629CF00729DAD /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		048806AC2B8629E000729DAD /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
		048806AD2B8629E000729DAD /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		048806B22B8629E000729DAD /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		048806B32B8629E000729DAD /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		048806BF2B862A6700729DAD /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
		048806C02B862A6700729DAD /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		048806C52B862A6700729DAD /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		048806C62B862A6700729DAD /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		048806D22B862A7800729DAD /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
		048806D32B862A7800729DAD /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		048806D82B862A7800729DAD /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		048806D92B862A7800729DAD /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		048806E52B862A8D00729DAD /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
		048806E62B862A8D00729DAD /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		048806EB2B862A8D00729DAD /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		048806EC2B862A8D00729DAD /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		1ACA1B59C2DBEAD69F6C9071 /* libPods-Common-makula-OEMStaging.a in Frameworks */ = {isa = PBXBuildFile; fileRef = FBA3A6FB0AE0409C952289BE /* libPods-Common-makula-OEMStaging.a */; };
		293521540690629CA19E3612 /* libPods-Common-makula-FacilityDev.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 1C9AFFC63B2DE573B2EA2CDE /* libPods-Common-makula-FacilityDev.a */; };
		81240BFA79F8C3301ECF5D27 /* libPods-Common-makula-OEMDev.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 1F44AEAEC2A9C6271EB9BE56 /* libPods-Common-makula-OEMDev.a */; };
		81AB9BB82411601600AC10FF /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		94B34792B1583035E831E5FD /* libPods-Common-makula-FacilityStaging.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 1B1C6569CEFBB6DFF2DC79CE /* libPods-Common-makula-FacilityStaging.a */; };
		9866BAC3B8BA0C77722FC132 /* libPods-Common-makula-FacilityProduction.a in Frameworks */ = {isa = PBXBuildFile; fileRef = F6734FF0A7093F7291D68D97 /* libPods-Common-makula-FacilityProduction.a */; };
		AB892CEE39C69E78DF91B2F6 /* libPods-Common-makula-OEMProduction.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 8E93B0F6AC74B1FCB405B000 /* libPods-Common-makula-OEMProduction.a */; };
		DAD21B32EA52447FFCD31954 /* libPods-Common-makula-makulaTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0DB57604B42253A3E0DD211B /* libPods-Common-makula-makulaTests.a */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		00E356F41AD99517003FC87E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 13B07F861A680F5B00A75B9A;
			remoteInfo = makula;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		00E356EE1AD99517003FC87E /* makulaTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = makulaTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		00E356F11AD99517003FC87E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		00E356F21AD99517003FC87E /* makulaTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = makulaTests.m; sourceTree = "<group>"; };
		048806942B8629B500729DAD /* OEMDev.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = OEMDev.app; sourceTree = BUILT_PRODUCTS_DIR; };
		048806A72B8629CF00729DAD /* OEMStaging.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = OEMStaging.app; sourceTree = BUILT_PRODUCTS_DIR; };
		048806BA2B8629E000729DAD /* OEMProduction.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = OEMProduction.app; sourceTree = BUILT_PRODUCTS_DIR; };
		048806CD2B862A6700729DAD /* FacilityDev.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = FacilityDev.app; sourceTree = BUILT_PRODUCTS_DIR; };
		048806E02B862A7800729DAD /* FacilityStaging.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = FacilityStaging.app; sourceTree = BUILT_PRODUCTS_DIR; };
		048806F32B862A8D00729DAD /* FacilityProduction.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = FacilityProduction.app; sourceTree = BUILT_PRODUCTS_DIR; };
		0DB57604B42253A3E0DD211B /* libPods-Common-makula-makulaTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-Common-makula-makulaTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		13B07F961A680F5B00A75B9A /* makula.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = makula.app; sourceTree = BUILT_PRODUCTS_DIR; };
		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = makula/AppDelegate.h; sourceTree = "<group>"; };
		13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = makula/AppDelegate.mm; sourceTree = "<group>"; };
		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = makula/Images.xcassets; sourceTree = "<group>"; };
		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = makula/Info.plist; sourceTree = "<group>"; };
		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = makula/main.m; sourceTree = "<group>"; };
		155AD60DA3C9D32F46169559 /* Pods-Common-makula-makulaTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Common-makula-makulaTests.debug.xcconfig"; path = "Target Support Files/Pods-Common-makula-makulaTests/Pods-Common-makula-makulaTests.debug.xcconfig"; sourceTree = "<group>"; };
		17F1D28ECD777028AB9B817A /* Pods-Common-makula-FacilityDev.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Common-makula-FacilityDev.release.xcconfig"; path = "Target Support Files/Pods-Common-makula-FacilityDev/Pods-Common-makula-FacilityDev.release.xcconfig"; sourceTree = "<group>"; };
		1B1C6569CEFBB6DFF2DC79CE /* libPods-Common-makula-FacilityStaging.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-Common-makula-FacilityStaging.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		1C9AFFC63B2DE573B2EA2CDE /* libPods-Common-makula-FacilityDev.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-Common-makula-FacilityDev.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		1F44AEAEC2A9C6271EB9BE56 /* libPods-Common-makula-OEMDev.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-Common-makula-OEMDev.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		328D54F803AB2AC47ACB28B3 /* Pods-Common-makula-OEMDev.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Common-makula-OEMDev.release.xcconfig"; path = "Target Support Files/Pods-Common-makula-OEMDev/Pods-Common-makula-OEMDev.release.xcconfig"; sourceTree = "<group>"; };
		50D7C397BDCF160B95FA8BC2 /* Pods-Common-makula-FacilityProduction.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Common-makula-FacilityProduction.release.xcconfig"; path = "Target Support Files/Pods-Common-makula-FacilityProduction/Pods-Common-makula-FacilityProduction.release.xcconfig"; sourceTree = "<group>"; };
		5B7EB9410499542E8C5724F5 /* Pods-makula-makulaTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-makula-makulaTests.debug.xcconfig"; path = "Target Support Files/Pods-makula-makulaTests/Pods-makula-makulaTests.debug.xcconfig"; sourceTree = "<group>"; };
		5FD0AFC33F1C4069ACB5C0B8 /* Pods-Common-makula-OEMProduction.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Common-makula-OEMProduction.debug.xcconfig"; path = "Target Support Files/Pods-Common-makula-OEMProduction/Pods-Common-makula-OEMProduction.debug.xcconfig"; sourceTree = "<group>"; };
		81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = LaunchScreen.storyboard; path = makula/LaunchScreen.storyboard; sourceTree = "<group>"; };
		88F014AB1CE7149B0A17FDAE /* Pods-Common-makula-FacilityStaging.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Common-makula-FacilityStaging.release.xcconfig"; path = "Target Support Files/Pods-Common-makula-FacilityStaging/Pods-Common-makula-FacilityStaging.release.xcconfig"; sourceTree = "<group>"; };
		89C6BE57DB24E9ADA2F236DE /* Pods-makula-makulaTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-makula-makulaTests.release.xcconfig"; path = "Target Support Files/Pods-makula-makulaTests/Pods-makula-makulaTests.release.xcconfig"; sourceTree = "<group>"; };
		8B64BA83A9799468123ABE85 /* Pods-Common-makula-FacilityDev.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Common-makula-FacilityDev.debug.xcconfig"; path = "Target Support Files/Pods-Common-makula-FacilityDev/Pods-Common-makula-FacilityDev.debug.xcconfig"; sourceTree = "<group>"; };
		8C045F05BC18A8CA7B6D7DD5 /* Pods-Common-makula-OEMDev.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Common-makula-OEMDev.debug.xcconfig"; path = "Target Support Files/Pods-Common-makula-OEMDev/Pods-Common-makula-OEMDev.debug.xcconfig"; sourceTree = "<group>"; };
		8E93B0F6AC74B1FCB405B000 /* libPods-Common-makula-OEMProduction.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-Common-makula-OEMProduction.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		928572833DBDA264584BB7C3 /* Pods-Common-makula-FacilityStaging.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Common-makula-FacilityStaging.debug.xcconfig"; path = "Target Support Files/Pods-Common-makula-FacilityStaging/Pods-Common-makula-FacilityStaging.debug.xcconfig"; sourceTree = "<group>"; };
		A74B24BFE38F4BC32511724D /* Pods-Common-makula-OEMStaging.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Common-makula-OEMStaging.release.xcconfig"; path = "Target Support Files/Pods-Common-makula-OEMStaging/Pods-Common-makula-OEMStaging.release.xcconfig"; sourceTree = "<group>"; };
		A75A4E128A5B81156DE5EF5E /* Pods-Common-makula-OEMProduction.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Common-makula-OEMProduction.release.xcconfig"; path = "Target Support Files/Pods-Common-makula-OEMProduction/Pods-Common-makula-OEMProduction.release.xcconfig"; sourceTree = "<group>"; };
		B2A1D9A170B112EA05771198 /* Pods-Common-makula-OEMStaging.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Common-makula-OEMStaging.debug.xcconfig"; path = "Target Support Files/Pods-Common-makula-OEMStaging/Pods-Common-makula-OEMStaging.debug.xcconfig"; sourceTree = "<group>"; };
		B98CED25899A1ED8018F1C8B /* Pods-Common-makula-FacilityProduction.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Common-makula-FacilityProduction.debug.xcconfig"; path = "Target Support Files/Pods-Common-makula-FacilityProduction/Pods-Common-makula-FacilityProduction.debug.xcconfig"; sourceTree = "<group>"; };
		D60EDE0DCD1C68C3BC21398B /* Pods-Common-makula-makulaTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Common-makula-makulaTests.release.xcconfig"; path = "Target Support Files/Pods-Common-makula-makulaTests/Pods-Common-makula-makulaTests.release.xcconfig"; sourceTree = "<group>"; };
		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
		F6734FF0A7093F7291D68D97 /* libPods-Common-makula-FacilityProduction.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-Common-makula-FacilityProduction.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		FBA3A6FB0AE0409C952289BE /* libPods-Common-makula-OEMStaging.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-Common-makula-OEMStaging.a"; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		00E356EB1AD99517003FC87E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DAD21B32EA52447FFCD31954 /* libPods-Common-makula-makulaTests.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		048806882B8629B500729DAD /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				81240BFA79F8C3301ECF5D27 /* libPods-Common-makula-OEMDev.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0488069B2B8629CF00729DAD /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1ACA1B59C2DBEAD69F6C9071 /* libPods-Common-makula-OEMStaging.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		048806AE2B8629E000729DAD /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AB892CEE39C69E78DF91B2F6 /* libPods-Common-makula-OEMProduction.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		048806C12B862A6700729DAD /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				293521540690629CA19E3612 /* libPods-Common-makula-FacilityDev.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		048806D42B862A7800729DAD /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				94B34792B1583035E831E5FD /* libPods-Common-makula-FacilityStaging.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		048806E72B862A8D00729DAD /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9866BAC3B8BA0C77722FC132 /* libPods-Common-makula-FacilityProduction.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13B07F8C1A680F5B00A75B9A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		00E356EF1AD99517003FC87E /* makulaTests */ = {
			isa = PBXGroup;
			children = (
				00E356F21AD99517003FC87E /* makulaTests.m */,
				00E356F01AD99517003FC87E /* Supporting Files */,
			);
			path = makulaTests;
			sourceTree = "<group>";
		};
		00E356F01AD99517003FC87E /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				00E356F11AD99517003FC87E /* Info.plist */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		13B07FAE1A68108700A75B9A /* makula */ = {
			isa = PBXGroup;
			children = (
				13B07FAF1A68108700A75B9A /* AppDelegate.h */,
				13B07FB01A68108700A75B9A /* AppDelegate.mm */,
				13B07FB51A68108700A75B9A /* Images.xcassets */,
				13B07FB61A68108700A75B9A /* Info.plist */,
				81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */,
				13B07FB71A68108700A75B9A /* main.m */,
			);
			name = makula;
			sourceTree = "<group>";
		};
		2D16E6871FA4F8E400B85C8A /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
				1C9AFFC63B2DE573B2EA2CDE /* libPods-Common-makula-FacilityDev.a */,
				F6734FF0A7093F7291D68D97 /* libPods-Common-makula-FacilityProduction.a */,
				1B1C6569CEFBB6DFF2DC79CE /* libPods-Common-makula-FacilityStaging.a */,
				1F44AEAEC2A9C6271EB9BE56 /* libPods-Common-makula-OEMDev.a */,
				8E93B0F6AC74B1FCB405B000 /* libPods-Common-makula-OEMProduction.a */,
				FBA3A6FB0AE0409C952289BE /* libPods-Common-makula-OEMStaging.a */,
				0DB57604B42253A3E0DD211B /* libPods-Common-makula-makulaTests.a */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		832341AE1AAA6A7D00B99B32 /* Libraries */ = {
			isa = PBXGroup;
			children = (
			);
			name = Libraries;
			sourceTree = "<group>";
		};
		83CBB9F61A601CBA00E9B192 = {
			isa = PBXGroup;
			children = (
				13B07FAE1A68108700A75B9A /* makula */,
				832341AE1AAA6A7D00B99B32 /* Libraries */,
				00E356EF1AD99517003FC87E /* makulaTests */,
				83CBBA001A601CBA00E9B192 /* Products */,
				2D16E6871FA4F8E400B85C8A /* Frameworks */,
				BBD78D7AC51CEA395F1C20DB /* Pods */,
			);
			indentWidth = 2;
			sourceTree = "<group>";
			tabWidth = 2;
			usesTabs = 0;
		};
		83CBBA001A601CBA00E9B192 /* Products */ = {
			isa = PBXGroup;
			children = (
				13B07F961A680F5B00A75B9A /* makula.app */,
				00E356EE1AD99517003FC87E /* makulaTests.xctest */,
				048806942B8629B500729DAD /* OEMDev.app */,
				048806A72B8629CF00729DAD /* OEMStaging.app */,
				048806BA2B8629E000729DAD /* OEMProduction.app */,
				048806CD2B862A6700729DAD /* FacilityDev.app */,
				048806E02B862A7800729DAD /* FacilityStaging.app */,
				048806F32B862A8D00729DAD /* FacilityProduction.app */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		BBD78D7AC51CEA395F1C20DB /* Pods */ = {
			isa = PBXGroup;
			children = (
				5B7EB9410499542E8C5724F5 /* Pods-makula-makulaTests.debug.xcconfig */,
				89C6BE57DB24E9ADA2F236DE /* Pods-makula-makulaTests.release.xcconfig */,
				8B64BA83A9799468123ABE85 /* Pods-Common-makula-FacilityDev.debug.xcconfig */,
				17F1D28ECD777028AB9B817A /* Pods-Common-makula-FacilityDev.release.xcconfig */,
				B98CED25899A1ED8018F1C8B /* Pods-Common-makula-FacilityProduction.debug.xcconfig */,
				50D7C397BDCF160B95FA8BC2 /* Pods-Common-makula-FacilityProduction.release.xcconfig */,
				928572833DBDA264584BB7C3 /* Pods-Common-makula-FacilityStaging.debug.xcconfig */,
				88F014AB1CE7149B0A17FDAE /* Pods-Common-makula-FacilityStaging.release.xcconfig */,
				8C045F05BC18A8CA7B6D7DD5 /* Pods-Common-makula-OEMDev.debug.xcconfig */,
				328D54F803AB2AC47ACB28B3 /* Pods-Common-makula-OEMDev.release.xcconfig */,
				5FD0AFC33F1C4069ACB5C0B8 /* Pods-Common-makula-OEMProduction.debug.xcconfig */,
				A75A4E128A5B81156DE5EF5E /* Pods-Common-makula-OEMProduction.release.xcconfig */,
				B2A1D9A170B112EA05771198 /* Pods-Common-makula-OEMStaging.debug.xcconfig */,
				A74B24BFE38F4BC32511724D /* Pods-Common-makula-OEMStaging.release.xcconfig */,
				155AD60DA3C9D32F46169559 /* Pods-Common-makula-makulaTests.debug.xcconfig */,
				D60EDE0DCD1C68C3BC21398B /* Pods-Common-makula-makulaTests.release.xcconfig */,
			);
			path = Pods;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		00E356ED1AD99517003FC87E /* makulaTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "makulaTests" */;
			buildPhases = (
				A55EABD7B0C7F3A422A6CC61 /* [CP] Check Pods Manifest.lock */,
				00E356EA1AD99517003FC87E /* Sources */,
				00E356EB1AD99517003FC87E /* Frameworks */,
				00E356EC1AD99517003FC87E /* Resources */,
				C59DA0FBD6956966B86A3779 /* [CP] Embed Pods Frameworks */,
				F6A41C54EA430FDDC6A6ED99 /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
				00E356F51AD99517003FC87E /* PBXTargetDependency */,
			);
			name = makulaTests;
			productName = makulaTests;
			productReference = 00E356EE1AD99517003FC87E /* makulaTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		048806832B8629B500729DAD /* OEMDev */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 048806912B8629B500729DAD /* Build configuration list for PBXNativeTarget "OEMDev" */;
			buildPhases = (
				048806842B8629B500729DAD /* [CP] Check Pods Manifest.lock */,
				048806852B8629B500729DAD /* Sources */,
				048806882B8629B500729DAD /* Frameworks */,
				0488068B2B8629B500729DAD /* Resources */,
				0488068E2B8629B500729DAD /* Bundle React Native code and images */,
				0488068F2B8629B500729DAD /* [CP] Embed Pods Frameworks */,
				048806902B8629B500729DAD /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = OEMDev;
			productName = makula;
			productReference = 048806942B8629B500729DAD /* OEMDev.app */;
			productType = "com.apple.product-type.application";
		};
		048806962B8629CF00729DAD /* OEMStaging */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 048806A42B8629CF00729DAD /* Build configuration list for PBXNativeTarget "OEMStaging" */;
			buildPhases = (
				048806972B8629CF00729DAD /* [CP] Check Pods Manifest.lock */,
				048806982B8629CF00729DAD /* Sources */,
				0488069B2B8629CF00729DAD /* Frameworks */,
				0488069E2B8629CF00729DAD /* Resources */,
				048806A12B8629CF00729DAD /* Bundle React Native code and images */,
				048806A22B8629CF00729DAD /* [CP] Embed Pods Frameworks */,
				048806A32B8629CF00729DAD /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = OEMStaging;
			productName = makula;
			productReference = 048806A72B8629CF00729DAD /* OEMStaging.app */;
			productType = "com.apple.product-type.application";
		};
		048806A92B8629E000729DAD /* OEMProduction */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 048806B72B8629E000729DAD /* Build configuration list for PBXNativeTarget "OEMProduction" */;
			buildPhases = (
				048806AA2B8629E000729DAD /* [CP] Check Pods Manifest.lock */,
				048806AB2B8629E000729DAD /* Sources */,
				048806AE2B8629E000729DAD /* Frameworks */,
				048806B12B8629E000729DAD /* Resources */,
				048806B42B8629E000729DAD /* Bundle React Native code and images */,
				048806B52B8629E000729DAD /* [CP] Embed Pods Frameworks */,
				048806B62B8629E000729DAD /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = OEMProduction;
			productName = makula;
			productReference = 048806BA2B8629E000729DAD /* OEMProduction.app */;
			productType = "com.apple.product-type.application";
		};
		048806BC2B862A6700729DAD /* FacilityDev */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 048806CA2B862A6700729DAD /* Build configuration list for PBXNativeTarget "FacilityDev" */;
			buildPhases = (
				048806BD2B862A6700729DAD /* [CP] Check Pods Manifest.lock */,
				048806BE2B862A6700729DAD /* Sources */,
				048806C12B862A6700729DAD /* Frameworks */,
				048806C42B862A6700729DAD /* Resources */,
				048806C72B862A6700729DAD /* Bundle React Native code and images */,
				048806C82B862A6700729DAD /* [CP] Embed Pods Frameworks */,
				048806C92B862A6700729DAD /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = FacilityDev;
			productName = makula;
			productReference = 048806CD2B862A6700729DAD /* FacilityDev.app */;
			productType = "com.apple.product-type.application";
		};
		048806CF2B862A7800729DAD /* FacilityStaging */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 048806DD2B862A7800729DAD /* Build configuration list for PBXNativeTarget "FacilityStaging" */;
			buildPhases = (
				048806D02B862A7800729DAD /* [CP] Check Pods Manifest.lock */,
				048806D12B862A7800729DAD /* Sources */,
				048806D42B862A7800729DAD /* Frameworks */,
				048806D72B862A7800729DAD /* Resources */,
				048806DA2B862A7800729DAD /* Bundle React Native code and images */,
				048806DB2B862A7800729DAD /* [CP] Embed Pods Frameworks */,
				048806DC2B862A7800729DAD /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = FacilityStaging;
			productName = makula;
			productReference = 048806E02B862A7800729DAD /* FacilityStaging.app */;
			productType = "com.apple.product-type.application";
		};
		048806E22B862A8D00729DAD /* FacilityProduction */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 048806F02B862A8D00729DAD /* Build configuration list for PBXNativeTarget "FacilityProduction" */;
			buildPhases = (
				048806E32B862A8D00729DAD /* [CP] Check Pods Manifest.lock */,
				048806E42B862A8D00729DAD /* Sources */,
				048806E72B862A8D00729DAD /* Frameworks */,
				048806EA2B862A8D00729DAD /* Resources */,
				048806ED2B862A8D00729DAD /* Bundle React Native code and images */,
				048806EE2B862A8D00729DAD /* [CP] Embed Pods Frameworks */,
				048806EF2B862A8D00729DAD /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = FacilityProduction;
			productName = makula;
			productReference = 048806F32B862A8D00729DAD /* FacilityProduction.app */;
			productType = "com.apple.product-type.application";
		};
		13B07F861A680F5B00A75B9A /* makula */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "makula" */;
			buildPhases = (
				13B07F871A680F5B00A75B9A /* Sources */,
				13B07F8C1A680F5B00A75B9A /* Frameworks */,
				13B07F8E1A680F5B00A75B9A /* Resources */,
				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = makula;
			productName = makula;
			productReference = 13B07F961A680F5B00A75B9A /* makula.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		83CBB9F71A601CBA00E9B192 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1210;
				TargetAttributes = {
					00E356ED1AD99517003FC87E = {
						CreatedOnToolsVersion = 6.2;
						TestTargetID = 13B07F861A680F5B00A75B9A;
					};
					13B07F861A680F5B00A75B9A = {
						LastSwiftMigration = 1120;
					};
				};
			};
			buildConfigurationList = 83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "makula" */;
			compatibilityVersion = "Xcode 12.0";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 83CBB9F61A601CBA00E9B192;
			productRefGroup = 83CBBA001A601CBA00E9B192 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				13B07F861A680F5B00A75B9A /* makula */,
				00E356ED1AD99517003FC87E /* makulaTests */,
				048806832B8629B500729DAD /* OEMDev */,
				048806962B8629CF00729DAD /* OEMStaging */,
				048806A92B8629E000729DAD /* OEMProduction */,
				048806BC2B862A6700729DAD /* FacilityDev */,
				048806CF2B862A7800729DAD /* FacilityStaging */,
				048806E22B862A8D00729DAD /* FacilityProduction */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		00E356EC1AD99517003FC87E /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0488068B2B8629B500729DAD /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0488068C2B8629B500729DAD /* LaunchScreen.storyboard in Resources */,
				0488068D2B8629B500729DAD /* Images.xcassets in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0488069E2B8629CF00729DAD /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0488069F2B8629CF00729DAD /* LaunchScreen.storyboard in Resources */,
				048806A02B8629CF00729DAD /* Images.xcassets in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		048806B12B8629E000729DAD /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				048806B22B8629E000729DAD /* LaunchScreen.storyboard in Resources */,
				048806B32B8629E000729DAD /* Images.xcassets in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		048806C42B862A6700729DAD /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				048806C52B862A6700729DAD /* LaunchScreen.storyboard in Resources */,
				048806C62B862A6700729DAD /* Images.xcassets in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		048806D72B862A7800729DAD /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				048806D82B862A7800729DAD /* LaunchScreen.storyboard in Resources */,
				048806D92B862A7800729DAD /* Images.xcassets in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		048806EA2B862A8D00729DAD /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				048806EB2B862A8D00729DAD /* LaunchScreen.storyboard in Resources */,
				048806EC2B862A8D00729DAD /* Images.xcassets in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13B07F8E1A680F5B00A75B9A /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				81AB9BB82411601600AC10FF /* LaunchScreen.storyboard in Resources */,
				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"$(SRCROOT)/.xcode.env.local",
				"$(SRCROOT)/.xcode.env",
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nWITH_ENVIRONMENT=\"../node_modules/react-native/scripts/xcode/with-environment.sh\"\nREACT_NATIVE_XCODE=\"../node_modules/react-native/scripts/react-native-xcode.sh\"\n\n/bin/sh -c \"$WITH_ENVIRONMENT $REACT_NATIVE_XCODE\"\n";
		};
		048806842B8629B500729DAD /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-Common-makula-OEMDev-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		0488068E2B8629B500729DAD /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"$(SRCROOT)/.xcode.env.local",
				"$(SRCROOT)/.xcode.env",
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nWITH_ENVIRONMENT=\"../node_modules/react-native/scripts/xcode/with-environment.sh\"\nREACT_NATIVE_XCODE=\"../node_modules/react-native/scripts/react-native-xcode.sh\"\n\n/bin/sh -c \"$WITH_ENVIRONMENT $REACT_NATIVE_XCODE\"\n";
		};
		0488068F2B8629B500729DAD /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMDev/Pods-Common-makula-OEMDev-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMDev/Pods-Common-makula-OEMDev-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMDev/Pods-Common-makula-OEMDev-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		048806902B8629B500729DAD /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMDev/Pods-Common-makula-OEMDev-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMDev/Pods-Common-makula-OEMDev-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMDev/Pods-Common-makula-OEMDev-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		048806972B8629CF00729DAD /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-Common-makula-OEMStaging-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		048806A12B8629CF00729DAD /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"$(SRCROOT)/.xcode.env.local",
				"$(SRCROOT)/.xcode.env",
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nWITH_ENVIRONMENT=\"../node_modules/react-native/scripts/xcode/with-environment.sh\"\nREACT_NATIVE_XCODE=\"../node_modules/react-native/scripts/react-native-xcode.sh\"\n\n/bin/sh -c \"$WITH_ENVIRONMENT $REACT_NATIVE_XCODE\"\n";
		};
		048806A22B8629CF00729DAD /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMStaging/Pods-Common-makula-OEMStaging-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMStaging/Pods-Common-makula-OEMStaging-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMStaging/Pods-Common-makula-OEMStaging-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		048806A32B8629CF00729DAD /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMStaging/Pods-Common-makula-OEMStaging-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMStaging/Pods-Common-makula-OEMStaging-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMStaging/Pods-Common-makula-OEMStaging-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		048806AA2B8629E000729DAD /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-Common-makula-OEMProduction-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		048806B42B8629E000729DAD /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"$(SRCROOT)/.xcode.env.local",
				"$(SRCROOT)/.xcode.env",
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nWITH_ENVIRONMENT=\"../node_modules/react-native/scripts/xcode/with-environment.sh\"\nREACT_NATIVE_XCODE=\"../node_modules/react-native/scripts/react-native-xcode.sh\"\n\n/bin/sh -c \"$WITH_ENVIRONMENT $REACT_NATIVE_XCODE\"\n";
		};
		048806B52B8629E000729DAD /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMProduction/Pods-Common-makula-OEMProduction-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMProduction/Pods-Common-makula-OEMProduction-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMProduction/Pods-Common-makula-OEMProduction-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		048806B62B8629E000729DAD /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMProduction/Pods-Common-makula-OEMProduction-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMProduction/Pods-Common-makula-OEMProduction-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Common-makula-OEMProduction/Pods-Common-makula-OEMProduction-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		048806BD2B862A6700729DAD /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-Common-makula-FacilityDev-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		048806C72B862A6700729DAD /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"$(SRCROOT)/.xcode.env.local",
				"$(SRCROOT)/.xcode.env",
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nWITH_ENVIRONMENT=\"../node_modules/react-native/scripts/xcode/with-environment.sh\"\nREACT_NATIVE_XCODE=\"../node_modules/react-native/scripts/react-native-xcode.sh\"\n\n/bin/sh -c \"$WITH_ENVIRONMENT $REACT_NATIVE_XCODE\"\n";
		};
		048806C82B862A6700729DAD /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityDev/Pods-Common-makula-FacilityDev-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityDev/Pods-Common-makula-FacilityDev-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityDev/Pods-Common-makula-FacilityDev-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		048806C92B862A6700729DAD /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityDev/Pods-Common-makula-FacilityDev-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityDev/Pods-Common-makula-FacilityDev-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityDev/Pods-Common-makula-FacilityDev-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		048806D02B862A7800729DAD /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-Common-makula-FacilityStaging-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		048806DA2B862A7800729DAD /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"$(SRCROOT)/.xcode.env.local",
				"$(SRCROOT)/.xcode.env",
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nWITH_ENVIRONMENT=\"../node_modules/react-native/scripts/xcode/with-environment.sh\"\nREACT_NATIVE_XCODE=\"../node_modules/react-native/scripts/react-native-xcode.sh\"\n\n/bin/sh -c \"$WITH_ENVIRONMENT $REACT_NATIVE_XCODE\"\n";
		};
		048806DB2B862A7800729DAD /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityStaging/Pods-Common-makula-FacilityStaging-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityStaging/Pods-Common-makula-FacilityStaging-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityStaging/Pods-Common-makula-FacilityStaging-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		048806DC2B862A7800729DAD /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityStaging/Pods-Common-makula-FacilityStaging-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityStaging/Pods-Common-makula-FacilityStaging-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityStaging/Pods-Common-makula-FacilityStaging-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		048806E32B862A8D00729DAD /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-Common-makula-FacilityProduction-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		048806ED2B862A8D00729DAD /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"$(SRCROOT)/.xcode.env.local",
				"$(SRCROOT)/.xcode.env",
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nWITH_ENVIRONMENT=\"../node_modules/react-native/scripts/xcode/with-environment.sh\"\nREACT_NATIVE_XCODE=\"../node_modules/react-native/scripts/react-native-xcode.sh\"\n\n/bin/sh -c \"$WITH_ENVIRONMENT $REACT_NATIVE_XCODE\"\n";
		};
		048806EE2B862A8D00729DAD /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityProduction/Pods-Common-makula-FacilityProduction-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityProduction/Pods-Common-makula-FacilityProduction-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityProduction/Pods-Common-makula-FacilityProduction-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		048806EF2B862A8D00729DAD /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityProduction/Pods-Common-makula-FacilityProduction-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityProduction/Pods-Common-makula-FacilityProduction-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Common-makula-FacilityProduction/Pods-Common-makula-FacilityProduction-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		A55EABD7B0C7F3A422A6CC61 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-Common-makula-makulaTests-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		C59DA0FBD6956966B86A3779 /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-makulaTests/Pods-Common-makula-makulaTests-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-makulaTests/Pods-Common-makula-makulaTests-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Common-makula-makulaTests/Pods-Common-makula-makulaTests-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		F6A41C54EA430FDDC6A6ED99 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-makulaTests/Pods-Common-makula-makulaTests-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Common-makula-makulaTests/Pods-Common-makula-makulaTests-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Common-makula-makulaTests/Pods-Common-makula-makulaTests-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		00E356EA1AD99517003FC87E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				00E356F31AD99517003FC87E /* makulaTests.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		048806852B8629B500729DAD /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				048806862B8629B500729DAD /* AppDelegate.mm in Sources */,
				048806872B8629B500729DAD /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		048806982B8629CF00729DAD /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				048806992B8629CF00729DAD /* AppDelegate.mm in Sources */,
				0488069A2B8629CF00729DAD /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		048806AB2B8629E000729DAD /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				048806AC2B8629E000729DAD /* AppDelegate.mm in Sources */,
				048806AD2B8629E000729DAD /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		048806BE2B862A6700729DAD /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				048806BF2B862A6700729DAD /* AppDelegate.mm in Sources */,
				048806C02B862A6700729DAD /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		048806D12B862A7800729DAD /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				048806D22B862A7800729DAD /* AppDelegate.mm in Sources */,
				048806D32B862A7800729DAD /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		048806E42B862A8D00729DAD /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				048806E52B862A8D00729DAD /* AppDelegate.mm in Sources */,
				048806E62B862A8D00729DAD /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13B07F871A680F5B00A75B9A /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */,
				13B07FC11A68108700A75B9A /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		00E356F51AD99517003FC87E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 13B07F861A680F5B00A75B9A /* makula */;
			targetProxy = 00E356F41AD99517003FC87E /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		00E356F61AD99517003FC87E /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 155AD60DA3C9D32F46169559 /* Pods-Common-makula-makulaTests.debug.xcconfig */;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				INFOPLIST_FILE = makulaTests/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 13.4;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@loader_path/Frameworks",
				);
				OTHER_LDFLAGS = (
					"-ObjC",
					"-lc++",
					"$(inherited)",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/makula.app/makula";
			};
			name = Debug;
		};
		00E356F71AD99517003FC87E /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = D60EDE0DCD1C68C3BC21398B /* Pods-Common-makula-makulaTests.release.xcconfig */;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				COPY_PHASE_STRIP = NO;
				INFOPLIST_FILE = makulaTests/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 13.4;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@loader_path/Frameworks",
				);
				OTHER_LDFLAGS = (
					"-ObjC",
					"-lc++",
					"$(inherited)",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/makula.app/makula";
			};
			name = Release;
		};
		048806922B8629B500729DAD /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 8C045F05BC18A8CA7B6D7DD5 /* Pods-Common-makula-OEMDev.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "oem-dev-info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = OEMDev;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		048806932B8629B500729DAD /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 328D54F803AB2AC47ACB28B3 /* Pods-Common-makula-OEMDev.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				INFOPLIST_FILE = "oem-dev-info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = OEMDev;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		048806A52B8629CF00729DAD /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = B2A1D9A170B112EA05771198 /* Pods-Common-makula-OEMStaging.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "oem-stage-Info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = OEMStaging;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		048806A62B8629CF00729DAD /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = A74B24BFE38F4BC32511724D /* Pods-Common-makula-OEMStaging.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				INFOPLIST_FILE = "oem-stage-Info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = OEMStaging;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		048806B82B8629E000729DAD /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 5FD0AFC33F1C4069ACB5C0B8 /* Pods-Common-makula-OEMProduction.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "oem-production-Info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = OEM;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		048806B92B8629E000729DAD /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = A75A4E128A5B81156DE5EF5E /* Pods-Common-makula-OEMProduction.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				INFOPLIST_FILE = "oem-production-Info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = OEM;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		048806CB2B862A6700729DAD /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 8B64BA83A9799468123ABE85 /* Pods-Common-makula-FacilityDev.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "facility-dev-info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = "Facility Dev";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		048806CC2B862A6700729DAD /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 17F1D28ECD777028AB9B817A /* Pods-Common-makula-FacilityDev.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				INFOPLIST_FILE = "facility-dev-info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = "Facility Dev";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		048806DE2B862A7800729DAD /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 928572833DBDA264584BB7C3 /* Pods-Common-makula-FacilityStaging.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "facility-staging-info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = "Facility Staging";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		048806DF2B862A7800729DAD /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 88F014AB1CE7149B0A17FDAE /* Pods-Common-makula-FacilityStaging.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				INFOPLIST_FILE = "facility-staging-info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = "Facility Staging";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		048806F12B862A8D00729DAD /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = B98CED25899A1ED8018F1C8B /* Pods-Common-makula-FacilityProduction.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "facility-production-info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = Facility;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		048806F22B862A8D00729DAD /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 50D7C397BDCF160B95FA8BC2 /* Pods-Common-makula-FacilityProduction.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				INFOPLIST_FILE = "facility-production-info.plist";
				INFOPLIST_KEY_CFBundleDisplayName = Facility;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		13B07F941A680F5B00A75B9A /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = makula/Info.plist;
				INFOPLIST_KEY_CFBundleDisplayName = makula;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = makula;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		13B07F951A680F5B00A75B9A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				INFOPLIST_FILE = makula/Info.plist;
				INFOPLIST_KEY_CFBundleDisplayName = makula;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = makula;
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		83CBBA201A601CBA00E9B192 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "c++20";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = i386;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 13.4;
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/lib/swift,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"\"$(SDKROOT)/usr/lib/swift\"",
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
					"\"$(inherited)\"",
				);
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_CPLUSPLUSFLAGS = (
					"$(OTHER_CFLAGS)",
					"-DFOLLY_NO_CONFIG",
					"-DFOLLY_MOBILE=1",
					"-DFOLLY_USE_LIBCPP=1",
					"-DFOLLY_CFG_NO_COROUTINES=1",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					" ",
				);
				REACT_NATIVE_PATH = "${PODS_ROOT}/../../node_modules/react-native";
				SDKROOT = iphoneos;
				USE_HERMES = true;
			};
			name = Debug;
		};
		83CBBA211A601CBA00E9B192 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "c++20";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = YES;
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = i386;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 13.4;
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/lib/swift,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"\"$(SDKROOT)/usr/lib/swift\"",
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
					"\"$(inherited)\"",
				);
				MTL_ENABLE_DEBUG_INFO = NO;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_CPLUSPLUSFLAGS = (
					"$(OTHER_CFLAGS)",
					"-DFOLLY_NO_CONFIG",
					"-DFOLLY_MOBILE=1",
					"-DFOLLY_USE_LIBCPP=1",
					"-DFOLLY_CFG_NO_COROUTINES=1",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					" ",
				);
				REACT_NATIVE_PATH = "${PODS_ROOT}/../../node_modules/react-native";
				SDKROOT = iphoneos;
				USE_HERMES = true;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "makulaTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				00E356F61AD99517003FC87E /* Debug */,
				00E356F71AD99517003FC87E /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		048806912B8629B500729DAD /* Build configuration list for PBXNativeTarget "OEMDev" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				048806922B8629B500729DAD /* Debug */,
				048806932B8629B500729DAD /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		048806A42B8629CF00729DAD /* Build configuration list for PBXNativeTarget "OEMStaging" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				048806A52B8629CF00729DAD /* Debug */,
				048806A62B8629CF00729DAD /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		048806B72B8629E000729DAD /* Build configuration list for PBXNativeTarget "OEMProduction" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				048806B82B8629E000729DAD /* Debug */,
				048806B92B8629E000729DAD /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		048806CA2B862A6700729DAD /* Build configuration list for PBXNativeTarget "FacilityDev" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				048806CB2B862A6700729DAD /* Debug */,
				048806CC2B862A6700729DAD /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		048806DD2B862A7800729DAD /* Build configuration list for PBXNativeTarget "FacilityStaging" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				048806DE2B862A7800729DAD /* Debug */,
				048806DF2B862A7800729DAD /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		048806F02B862A8D00729DAD /* Build configuration list for PBXNativeTarget "FacilityProduction" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				048806F12B862A8D00729DAD /* Debug */,
				048806F22B862A8D00729DAD /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "makula" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				13B07F941A680F5B00A75B9A /* Debug */,
				13B07F951A680F5B00A75B9A /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "makula" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				83CBBA201A601CBA00E9B192 /* Debug */,
				83CBBA211A601CBA00E9B192 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 83CBB9F71A601CBA00E9B192 /* Project object */;
}
