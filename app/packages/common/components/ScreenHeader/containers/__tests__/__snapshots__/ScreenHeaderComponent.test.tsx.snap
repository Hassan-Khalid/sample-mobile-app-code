// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ScreenHeaderComponent should render correctly with default props 1`] = `
<View
  accessibilityLabel="header_component"
  style={
    {
      "alignItems": "center",
      "backgroundColor": {
        "dynamic": {
          "dark": "#1b1b1b",
          "highContrastDark": undefined,
          "highContrastLight": undefined,
          "light": "#FFFFFF",
        },
      },
      "borderBottomColor": "#f2f2f2",
      "borderBottomWidth": 0.5,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "paddingHorizontal": 10,
      "paddingVertical": 10,
    }
  }
  testID="header_component"
>
  <RNCSafeAreaView
    edges={
      {
        "bottom": "off",
        "left": "additive",
        "right": "additive",
        "top": "additive",
      }
    }
    style={
      {
        "flexDirection": "row",
        "width": "100%",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "flex-start",
        }
      }
    >
      <View
        style={
          {
            "marginLeft": 10,
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <Image
            resizeMode="contain"
            source={
              {
                "testUri": "../../../packages/common/assets/Images/common/list.png",
              }
            }
            style={
              {
                "height": 22,
                "resizeMode": "contain",
                "width": 22,
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "flex-start",
          "flex": 3,
          "paddingHorizontal": 15,
        }
      }
    >
      <View
        style={
          {
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            {
              "alignSelf": "auto",
              "color": {
                "dynamic": {
                  "dark": "#172B4D",
                  "highContrastDark": undefined,
                  "highContrastLight": undefined,
                  "light": "#172B4D",
                },
              },
              "fontFamily": "Manrope-Regular",
              "fontSize": 18,
              "fontWeight": "bold",
            }
          }
        >
          Test Title
        </Text>
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "flex-end",
        }
      }
    >
      <View
        style={
          {
            "flexDirection": "row",
            "marginRight": 10,
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <Image
            resizeMode="contain"
            source={
              {
                "testUri": "../../../packages/common/assets/Images/common/search.png",
              }
            }
            style={
              {
                "height": 22,
                "resizeMode": "contain",
                "width": 22,
              }
            }
          />
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</View>
`;
